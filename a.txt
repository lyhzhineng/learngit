
1、mkdir 是用于创建一个库？
1、cd 是转换到这个库中
2、pwd命令用于显示当前目录位置
3、git init命令把这个目录变成Git可以管理的仓库
4、git add （文件名）是把工作区（电脑）上的更改存放到暂存区
5、git commit -m“”将暂存区的东西提交到当前分支中   -m后面输入的是本次提交的说明，可以输入任意内容，当然最好是有意义的，这样你就能从历史记录里方便地找到改动记录。
git add多次，都只要git commit一次作为提交
6、git status命令可以让我们时刻掌握仓库当前的状态
7、git diff （文件名）查看变化
git diff    #是工作区(work dict)和暂存区(stage)的比较
git diff --cached    #是暂存区(stage)和分支(master)的比较
8、vi （文件名）在黑框中直接更改工作区（电脑上的文件）。用法还要输入i代表插入，然后就可以更改了。更改完毕按ese键退出编辑，光标会跑到最后一行 ，在输入：wq就可以返回命令界面
9、git log 查看commit记录
10、git log --pretty=oneline  加了这个参数后记录每行一个
11、可视化工具查看Git历史
12、git reset -hard HEAD^回退到上一版本，HEAD表示当前版本，HEAD^代表前一个commit版本，一个^代表前面一个。HEAD^可以改成任意的版本号（版本号不用写全）。
一大串类似3628164...882e1e0的是commit id（版本号）
13、git reflog 用来记录你的每一次命令
14、cat （文件名）查看文件内容
15、git diff HEAD -- （文件名） 命令可以查看工作区和版本库里面最新版本的区别
16、git checkout -- （文件名）  把文件在工作区的修改全部撤销到最后暂存区的版本
git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。
场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

17、rm （文件名）直接在文件管理器中把没用的文件删了，或者用rm命令删了
这只是工作区删除了
git rm （文件名）如果库里也要删除还要加这句和git commit -m“”
git checkout -- （文件名）是用版本库里的版本替换工作区的版本，无论工作区是修改还是删除，都可以“一键还原”。
18、
